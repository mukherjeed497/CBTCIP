# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YQLSsQWat1AuXfMzr_Oq1366B4DXgU0V
"""

#import packages
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB

#import data
spam_df = pd.read_csv("/content/Spam Email Detection - spam (3).csv")

#inspect data
spam_df.groupby('v1').describe()

#turn spam/ham into numerical data, creating a new column called 'spam'
spam_df['spam'] = spam_df['v1'].apply(lambda x: 1 if x == 'spam' else 0)

#create train/test split
x_train, x_test, y_train, y_test = train_test_split(spam_df.v2, spam_df.spam, test_size = 0.25)

x_train

#find word count and data as a matrix
cv = CountVectorizer()
x_train_count = cv.fit_transform(x_train.values)

x_train_count

x_train_count.toarray()

#train model
model = MultinomialNB()
model.fit(x_train_count, y_train)

#Pre-test ham
email_ham = ["baseball tickets later"]
email_ham_count = cv.transform(email_ham)
model.predict(email_ham_count)

#Pre-test spam
email_spam = ["reward money click"]
email_spam_count = cv.transform(email_spam)
model.predict(email_spam_count)

#test model
x_test_count = cv.transform(x_test)
model.score(x_test_count, y_test)